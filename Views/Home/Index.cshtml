@{
    ViewData["Title"] = "Rota Hesaplama";
}

<div class="row">
    <div class="col-md-12">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span><i class="fas fa-map-marked-alt me-2"></i>Kocaeli Ulaşım Rotası Hesapla</span>
            </div>
            <div class="card-body">
                <p class="text-muted mb-4">
                    <i class="fas fa-info-circle me-2"></i>
                    Haritada başlangıç ve hedef noktalarınızı işaretleyerek size en uygun ulaşım rotasını hesaplayabilirsiniz.
                    3 km'den uzak mesafeler için taksi kullanımı önerilir. Otobüs-tramvay aktarmalarında %20 indirim uygulanır.
                </p>
                
                <div class="row">
                    <div class="col-md-8">
                        <!-- Leaflet Harita -->
                        <div id="map" style="height: 500px; border-radius: 10px; z-index: 0;"></div>
                    </div>
                    
                    <div class="col-md-4">
                        <div class="card sticky-top" style="top: 20px; z-index: 0;">
                            <div class="card-header bg-primary text-white">
                                <i class="fas fa-route me-2"></i>Rota Bilgileri
                            </div>
                            <div class="card-body">
                                <form method="post" action="/Home/RotaHesapla" id="rotaForm" onsubmit="return validateForm()">
                                    <div class="mb-3">
                                        <div class="position-relative">
                                            <div class="form-floating mb-3">
                                                <input type="text" class="form-control" id="displayBaslangic" placeholder="Başlangıç noktası seçin" readonly>
                                                <label for="displayBaslangic"><i class="fas fa-map-marker-alt text-danger me-2"></i>Başlangıç Noktası</label>
                                            </div>
                                            <small class="text-muted">Haritadan başlangıç noktasını seçin veya <a href="#" id="getCurrentLocation" class="text-primary">mevcut konumunuzu kullanın</a></small>
                                            <!-- Gizli koordinat giriş alanları -->
                                            <input type="hidden" name="kullaniciLat" id="kullaniciLat" required>
                                            <input type="hidden" name="kullaniciLon" id="kullaniciLon" required>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="position-relative">
                                            <div class="form-floating mb-3">
                                                <input type="text" class="form-control" id="displayHedef" placeholder="Hedef noktası seçin" readonly>
                                                <label for="displayHedef"><i class="fas fa-flag-checkered text-success me-2"></i>Hedef Noktası</label>
                                            </div>
                                            <small class="text-muted">Haritadan hedef noktasını seçin</small>
                                            <!-- Gizli koordinat giriş alanları -->
                                            <input type="hidden" name="hedefLat" id="hedefLat" required>
                                            <input type="hidden" name="hedefLon" id="hedefLon" required>
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="form-floating">
                                            <select class="form-select" id="yolcuTipi" name="yolcuTipi">
                                                <option value="Genel">Genel</option>
                                                <option value="Öğrenci">Öğrenci</option>
                                                <option value="Öğretmen">Öğretmen</option>
                                                <option value="Yaşlı">Yaşlı (65+)</option>
                                                <option value="Engelli">Engelli</option>
                                            </select>
                                            <label for="yolcuTipi"><i class="fas fa-user me-2"></i>Yolcu Tipi</label>
                                        </div>
                                    </div>
                                    
                                    <!-- Rota Tercihleri -->
                                    <div class="mb-3">
                                        <label class="form-label d-flex align-items-center">
                                            <i class="fas fa-sliders-h me-2 text-primary"></i>Rota Tercihleri
                                        </label>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="sadeceTaksi" name="sadeceTaksi" value="true">
                                            <label class="form-check-label" for="sadeceTaksi">
                                                <i class="fas fa-taxi me-1 text-warning"></i>Sadece Taksi
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="sadeceOtobus" name="sadeceOtobus" value="true">
                                            <label class="form-check-label" for="sadeceOtobus">
                                                <i class="fas fa-bus me-1 text-info"></i>Sadece Otobüs
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="sadeceTramvay" name="sadeceTramvay" value="true">
                                            <label class="form-check-label" for="sadeceTramvay">
                                                <i class="fas fa-train me-1 text-success"></i>Sadece Tramvay
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="aktarmaIzin" name="aktarmaIzin" value="true" checked>
                                            <label class="form-check-label" for="aktarmaIzin">
                                                <i class="fas fa-exchange-alt me-1 text-primary"></i>Otobüs + Tramvay Kombinasyonu
                                            </label>
                                        </div>
                                    </div>
                                    
                                    <div class="alert alert-danger" role="alert" id="errorBox" style="display: none;">
                                        <i class="fas fa-exclamation-triangle me-2"></i><span id="errorText"></span>
                                    </div>
                                    
                                    <div class="alert alert-primary" role="alert" id="infoBox" style="display: none;">
                                        <i class="fas fa-info-circle me-2"></i><span id="infoText"></span>
                                    </div>
                                    
                                    <div class="d-grid">
                                        <button type="submit" class="btn btn-primary btn-lg" id="hesaplaBtn">
                                            <i class="fas fa-calculator me-2"></i>Rota Hesapla
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS ve JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <script>
        $(document).ready(function() {
            let map = null;
            let duraklar = [];
            let baslangicMarker = null;
            let hedefMarker = null;
            
            // Harita ikonları
            const baslangicIcon = L.divIcon({
                html: '<i class="fa fa-map-marker-alt" style="color: #e74c3c; font-size: 24px;"></i>',
                className: 'map-icon',
                iconSize: [24, 24],
                iconAnchor: [12, 24]
            });

            const hedefIcon = L.divIcon({
                html: '<i class="fa fa-flag-checkered" style="color: #2ecc71; font-size: 24px;"></i>',
                className: 'map-icon',
                iconSize: [24, 24],
                iconAnchor: [12, 24]
            });
            
            const busIcon = L.divIcon({
                html: '<i class="fa fa-bus" style="color: #3498db; font-size: 16px;"></i>',
                className: 'map-icon',
                iconSize: [20, 20],
                iconAnchor: [10, 10]
            });

            const tramIcon = L.divIcon({
                html: '<i class="fa fa-train" style="color: #e74c3c; font-size: 16px;"></i>',
                className: 'map-icon',
                iconSize: [20, 20],
                iconAnchor: [10, 10]
            });

            // JSON dosyasından durak verilerini yükle
            function yukleVeriseti() {
                $('#infoBox').removeClass('alert-danger').addClass('alert-primary').show();
                $('#infoText').text('Durak verileri yükleniyor...');
                
                $.getJSON('/veriseti.json', function(data) {
                    duraklar = data.duraklar;
                    
                    // Haritayı başlat
                    baslatHarita(data.city, duraklar);
                    
                    $('#infoBox').hide();
                })
                .fail(function(jqxhr, textStatus, error) {
                    $('#infoText').text('Durak verileri yüklenemedi: ' + error);
                    $('#infoBox').removeClass('alert-primary').addClass('alert-danger').show();
                    
                    // Hata durumunda yine de haritayı başlat
                    baslatHarita('Izmit', []);
                });
            }
            
            // Haritayı başlat ve durakları ekle
            function baslatHarita(sehir, durakListesi) {
                // Kocaeli merkezi
                const merkezKoordinat = [40.7731, 29.9250];
                map = L.map('map').setView(merkezKoordinat, 13);
                
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);
                
                // Durakları haritaya ekle
                durakListesi.forEach(durak => {
                    const icon = durak.type.toLowerCase() === 'bus' ? busIcon : tramIcon;
                    L.marker([durak.lat, durak.lon], { icon: icon })
                        .addTo(map)
                        .bindPopup(`<strong>${durak.name}</strong><br>${durak.type.toLowerCase() === 'bus' ? 'Otobüs Durağı' : 'Tramvay Durağı'}`);
                });
                
                // Harita tıklama olayı
                map.on('click', function(e) {
                    if (!baslangicMarker) {
                        // Başlangıç noktası seçimi
                        baslangicMarker = L.marker(e.latlng, { icon: baslangicIcon }).addTo(map);
                        
                        // 1,000,000 ile çarparak koordinatları sakla
                        $('#kullaniciLat').val(e.latlng.lat);
                        $('#kullaniciLon').val(e.latlng.lng);
                        
                        // Ekranda görüntülenecek değer
                        $('#displayBaslangic').val(`${e.latlng.lat.toFixed(6)}, ${e.latlng.lng.toFixed(6)}`);
                        
                        baslangicMarker.bindPopup('Başlangıç Noktası').openPopup();
                        
                        console.log("Başlangıç noktası seçildi:", {
                            lat: e.latlng.lat,
                            lon: e.latlng.lng,
                            formValue: {
                                lat: e.latlng.lat,
                                lon: e.latlng.lng
                            }
                        });
                    } else if (!hedefMarker) {
                        // Hedef noktası seçimi
                        hedefMarker = L.marker(e.latlng, { icon: hedefIcon }).addTo(map);
                        
                        // 1,000,000 ile çarparak koordinatları sakla
                        $('#hedefLat').val(e.latlng.lat);
                        $('#hedefLon').val(e.latlng.lng);
                        
                        // Ekranda görüntülenecek değer
                        $('#displayHedef').val(`${e.latlng.lat.toFixed(6)}, ${e.latlng.lng.toFixed(6)}`);
                        
                        hedefMarker.bindPopup('Hedef Noktası').openPopup();
                        
                        console.log("Hedef noktası seçildi:", {
                            lat: e.latlng.lat,
                            lon: e.latlng.lng,
                            formValue: {
                                lat: e.latlng.lat,
                                lon: e.latlng.lng
                            }
                        });
                    } else {
                        // Hem başlangıç hem hedef zaten seçilmişse, başlangıç noktasını güncelle
                        map.removeLayer(baslangicMarker);
                        
                        baslangicMarker = L.marker(e.latlng, { icon: baslangicIcon }).addTo(map);
                        
                        // 1,000,000 ile çarparak koordinatları sakla
                        $('#kullaniciLat').val(e.latlng.lat);
                        $('#kullaniciLon').val(e.latlng.lng);
                        
                        // Ekranda görüntülenecek değer
                        $('#displayBaslangic').val(`${e.latlng.lat.toFixed(6)}, ${e.latlng.lng.toFixed(6)}`);
                        
                        baslangicMarker.bindPopup('Başlangıç Noktası (Güncellenmiş)').openPopup();
                        
                        // Hedef markeri resetle
                        map.removeLayer(hedefMarker);
                        hedefMarker = null;
                        $('#hedefLat').val('');
                        $('#hedefLon').val('');
                        $('#displayHedef').val('');
                    }
                    
                    // Form geçerliliğini kontrol et
                    checkFormValidity();
                });
            }
            
            // Sayfa yüklendiğinde veriyi yükle
            yukleVeriseti();

            // Mevcut konum butonu
            $('#getCurrentLocation').click(function(e) {
                e.preventDefault();
                
                if (navigator.geolocation) {
                    $('#infoBox').removeClass('alert-danger').addClass('alert-primary').show();
                    $('#infoText').text('Konum alınıyor...');
                    
                    navigator.geolocation.getCurrentPosition(function(position) {
                        const lat = position.coords.latitude;
                        const lon = position.coords.longitude;
                        
                        if (baslangicMarker) {
                            map.removeLayer(baslangicMarker);
                        }
                        
                        baslangicMarker = L.marker([lat, lon], { icon: baslangicIcon }).addTo(map);
                        map.setView([lat, lon], 15);
                        
                        // 1,000,000 ile çarparak koordinatları sakla
                        $('#kullaniciLat').val(lat);
                        $('#kullaniciLon').val(lon);
                        
                        // Ekranda görüntülenecek değer
                        $('#displayBaslangic').val(`${lat.toFixed(6)}, ${lon.toFixed(6)}`);
                        
                        $('#infoBox').hide();
                        checkFormValidity();
                        
                        baslangicMarker.bindPopup('Mevcut Konumunuz').openPopup();
                        
                        console.log("Mevcut konum kullanıldı:", {
                            lat: lat,
                            lon: lon,
                            formValue: {
                                lat: lat,
                                lon: lon
                            }
                        });
                    }, function(error) {
                        $('#infoText').text('Konum alınamadı: ' + error.message);
                        $('#infoBox').removeClass('alert-primary').addClass('alert-danger').show();
                    });
                } else {
                    $('#infoText').text('Tarayıcınız konum hizmetlerini desteklemiyor.');
                    $('#infoBox').removeClass('alert-primary').addClass('alert-danger').show();
                }
            });
            
            // Form geçerliliğini kontrol et
            function checkFormValidity() {
                if ($('#kullaniciLat').val() && $('#kullaniciLon').val() && 
                    $('#hedefLat').val() && $('#hedefLon').val()) {
                    $('#hesaplaBtn').prop('disabled', false);
                    $('#errorBox').hide();
                } else {
                    $('#hesaplaBtn').prop('disabled', true);
                }
            }
            
            // Form gönderim kontrolü
            window.validateForm = function() {
                // Koordinatları kontrol et
                if (!$('#kullaniciLat').val() || !$('#kullaniciLon').val()) {
                    $('#errorText').text('Lütfen başlangıç noktasını seçin.');
                    $('#errorBox').show();
                    return false;
                }
                
                if (!$('#hedefLat').val() || !$('#hedefLon').val()) {
                    $('#errorText').text('Lütfen hedef noktasını seçin.');
                    $('#errorBox').show();
                    return false;
                }
                
                // Koordinat değerlerini kontrol et
                const kullaniciLat = parseFloat($('#kullaniciLat').val());
                const kullaniciLon = parseFloat($('#kullaniciLon').val());
                const hedefLat = parseFloat($('#hedefLat').val());
                const hedefLon = parseFloat($('#hedefLon').val());
                
                if (isNaN(kullaniciLat) || isNaN(kullaniciLon) || isNaN(hedefLat) || isNaN(hedefLon)) {
                    $('#errorText').text('Koordinat değerleri geçersiz.');
                    $('#errorBox').show();
                    return false;
                }
                
                // Aynı nokta kontrolü - daha küçük bir tolerans değeri kullanarak doğru karşılaştırma yap
                if (Math.abs(kullaniciLat - hedefLat) < 0.001 && Math.abs(kullaniciLon - hedefLon) < 0.001) {
                    $('#errorText').text('Başlangıç ve hedef noktaları aynı olamaz.');
                    $('#errorBox').show();
                    return false;
                }
                
                // Form gönderilmeden önce seçenekleri kontrol et
                if ($('#sadeceTaksi').is(':checked') && ($('#sadeceOtobus').is(':checked') || $('#sadeceTramvay').is(':checked') || $('#aktarmaIzin').is(':checked'))) {
                    $('#errorText').text('Sadece Taksi seçeneği diğer seçeneklerle birlikte kullanılamaz.');
                    $('#errorBox').show();
                    return false;
                }
                
                if ($('#sadeceOtobus').is(':checked') && $('#sadeceTramvay').is(':checked')) {
                    $('#errorText').text('Sadece Otobüs ve Sadece Tramvay seçenekleri birlikte kullanılamaz.');
                    $('#errorBox').show();
                    return false;
                }
                
                // Yükleniyor mesajı göster
                $('#infoText').text('Rota hesaplanıyor, lütfen bekleyin...');
                $('#infoBox').removeClass('alert-danger').addClass('alert-primary').show();
                $('#hesaplaBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Hesaplanıyor...');
                
                console.log("Form gönderiliyor, koordinatlar:", {
                    baslangic: { 
                        lat: kullaniciLat, 
                        lon: kullaniciLon,
                        real_lat: kullaniciLat / 1000000, 
                        real_lon: kullaniciLon / 1000000
                    },
                    hedef: { 
                        lat: hedefLat, 
                        lon: hedefLon,
                        real_lat: hedefLat / 1000000, 
                        real_lon: hedefLon / 1000000
                    },
                    yolcuTipi: $('#yolcuTipi').val(),
                    sadeceTaksi: $('#sadeceTaksi').is(':checked'),
                    sadeceOtobus: $('#sadeceOtobus').is(':checked'),
                    sadeceTramvay: $('#sadeceTramvay').is(':checked'),
                    aktarmaIzin: $('#aktarmaIzin').is(':checked')
                });
                
                return true;
            };
            
            // Rota tercihlerini dinle
            $('#sadeceTaksi, #sadeceOtobus, #sadeceTramvay, #aktarmaIzin').change(function() {
                // Eğer tercihlerden biri değiştirilirse diğerlerini güncelle
                const id = $(this).attr('id');
                if ($(this).is(':checked')) {
                    if (id !== 'aktarmaIzin') {
                        $('#aktarmaIzin').prop('checked', false);
                    }
                    
                    if (id === 'sadeceTaksi') {
                        $('#sadeceOtobus, #sadeceTramvay').prop('checked', false);
                    } else if (id === 'sadeceOtobus') {
                        $('#sadeceTaksi, #sadeceTramvay').prop('checked', false);
                    } else if (id === 'sadeceTramvay') {
                        $('#sadeceTaksi, #sadeceOtobus').prop('checked', false);
                    } else if (id === 'aktarmaIzin') {
                        $('#sadeceTaksi, #sadeceOtobus, #sadeceTramvay').prop('checked', false);
                    }
                }
            });
        });
    </script>
    
    <style>
        .map-icon {
            background: none;
            border: none;
        }
    </style>
}
